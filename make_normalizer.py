import codecs
import time
import unicodedata

def is_letter(char, letter):
    nfkd = unicodedata.normalize('NFKD', char)
    stripped = ''.join(c for c in nfkd if not unicodedata.combining(c))
    casefolded = stripped.casefold()
    if letter == 'œÉ':
        if not is_letter(char, 'œÇ'):
            return casefolded == letter
    else:
        return casefolded == letter
    

def letter_check(letter):
    ls = []
    for i in range(0x10FFFF + 1):
        char = chr(i)
        if is_letter(char, letter):
            ls.append([f'{i:04X}', char])
    return ls

def main():
    alpha = {
    "1": ["00C1", "√Å"],
    '2': ['1F0A', '·ºä'],
    "3": ["00E1", "√°"],
    "4": ["00E0", "√†"],
    "5": ["00E2", "√¢"],
    "6": ["00C4", "√Ñ"],
    "7": ["00E4", "√§"],
    '8': ['0391', 'Œë'],
    '9': ['03B1', 'Œ±'],
    '10': ['1F08', '·ºà'],
    '11': ['1F00', '·ºÄ'],
    '12': ['1F0C', '·ºå'],
    '13': ['1F04', '·ºÑ'],
    '16': ['1F02', '·ºÇ'],
    '18': ['1F0E', '·ºé'],
    '19': ['1F06', '·ºÜ'],
    '22': ['1F00', '·æÄ'],
    '23': ['1F08', '·æà'],
    '24': ['1F09', '·ºâ'],
    '25': ['1F01', '·ºÅ'],
    '26': ['1F05', '·ºÖ'],
    '27': ['1F0D', '·ºç'],
    '29': ['1F05', '·æÖ'],
    '30': ['1F03', '·ºÉ'],
    '31': ['1F0F', '·ºè'],
    '32': ['1F07', '·ºá'],
    '35': ['1F01', '·æÅ'],
    '36': ['03AC', 'Œ¨'],
    '37': ['0386', 'ŒÜ'],
    '38': ['1FB4', '·æ¥'],
    '39': ['1F70', '·Ω∞'],
    '40': ['1FBA', '·æ∫'],
    '41': ['1FB2', '·æ≤'],
    '42': ['1FB6', '·æ∂'],
    '43': ['1FB7', '·æ∑'],
    '44': ['1FBC', '·æº'],
    '45': ['03B1 0323', 'Œ±Ã£'],
    '46': ['1FB3', '·æ≥'],
    '47': ['1F84', '·æÑ'],
    '48': ['1F80', '·æÄ'],
    '49': ['1F0B', '·ºã'],
    '50': ['1F82', '50'],
    '51': ['1F86', '·æÜ'],
    '52': ['1F87', '·æá'],
    '53': ['1F8E', '·æé'],
    '54': ['1F8C', '·æå'],
    '55': ['1F81', '·æÅ'],
    '56': ['1F88', '·æà'],
    '57': ['1F8D', '·æç'],
    '58': ['1F8F', '·æè'],
    '59': ['1F85', '·æÖ'],
    '60': ['03B1 035C', 'Œ±Õú']
    }
    beta = {
    '1': ['0392', 'Œí'],
    '2': ['03B2', 'Œ≤']
    }
    gamma = {
    '1': ['0393', 'Œì'],
    '2': ['03B3', 'Œ≥'],
    '3': ['03B3 0323', 'Œ≥Ã£']
    }
    delta = {
    '1': ['0394', 'Œî'],
    '2': ['03B4', 'Œ¥'],
    '3': ['03B4 0323', 'Œ¥Ã£']
    }
    epsilon = {
    '1': ['00C9', '√â'],
    '2': ['03B5', 'Œµ'],
    '3': ['03B5 0323', 'ŒµÃ£'],
    '4': ['1F72', '·Ω≤'],
    '5': ['00E9', '√©'],
    '6': ['00E8', '√®'],
    '7': ['00C8', '√à'],
    '8': ['00EA', '√™'],
    '9': ['00EB', '√´'],
    '10': ['00CB', '√ã'],
    '11': ['0395', 'Œï'],
    '12': ['1F10', '·ºê'],
    '13': ['1F18', '·ºò'],
    '14': ['1F1C', '·ºú'],
    '15': ['1F14', '·ºî'],
    '16': ['1F1A', '·ºö'],
    '17': ['1F12', '·ºí'],
    '18': ['1F19', '·ºô'],
    '19': ['1F11', '·ºë'],
    '20': ['1F1D', '·ºù'],
    '21': ['1F15', '·ºï'],
    '22': ['1F13', '·ºì'],
    '23': ['1F1B', '·ºõ'],
    '24': ['03AD', 'Œ≠'],
    '25': ['0388', 'Œà'],
    '26': ['1FC8', '·øà'],
    '27': ['03B5 035C', 'ŒµÕú']
    }
    zeta = {
    '1': ['0396', 'Œñ'],
    '2': ['03B6', 'Œ∂']
    }
    eta = {
    '1': ['03B7', 'Œ∑'],
    '2': ['0397', 'Œó'],
    '5': ['1F20', '·º†'],
    '6': ['1F2C', '·º¨'],
    '7': ['1F24', '·º§'],
    '8': ['1F9C', '·æú'],
    '9': ['1F94', '·æî'],
    '10': ['1F2A', '·º™'],
    '11': ['1F22', '·º¢'],
    '12': ['1F92', '·æí'],
    '13': ['1F26', '·º¶'],
    '14': ['1F2E', '·ºÆ'],
    '15': ['1F9E', '·æû'],
    '16': ['1F96', '·æñ'],
    '17': ['1F98', '·æò'],
    '18': ['1F21', '·º°'],
    '19': ['1F29', '·º©'],
    '20': ['1F25', '·º•'],
    '21': ['1F2D', '·º≠'],
    '22': ['1F9D', '·æù'],
    '23': ['1F95', '·æï'],
    '24': ['1F2B', '·º´'],
    '25': ['1F23', '·º£'],
    '26': ['1F93', '·æì'],
    '27': ['1F27', '·ºß'],
    '28': ['1F2F', '·ºØ'],
    '29': ['1F9F', '·æü'],
    '30': ['1F97', '·æó'],
    '31': ['1F91', '·æë'],
    '32': ['1F99', '·æô'],
    '33': ['0389', 'Œâ'],
    '34': ['1F28', '·º®'],
    '35': ['03AE', 'ŒÆ'],
    '36': ['1FC4', '·øÑ'],
    '37': ['1F74', '·Ω¥'],
    '38': ['1FCA', '·øä'],
    '39': ['1FC6', '·øÜ'],
    '40': ['1FC7', '·øá'],
    '41': ['1FCC', '·øå'],
    '42': ['1F90', '·æê'],
    '43': ['1FC2', '·øÇ'],
    '44': ['1FC3', '·øÉ'],
    '45': ['03B7 035C', 'Œ∑Õú']
    }
    theta = {
  '1': ['03b8', 'Œ∏'],
  '2': ['0398', 'Œò']
    }
    iota = {
    '1': ['00ED', '√≠'],
    '2': ['00CD', '√ç'],
    '3': ['1FD3', '·øì'],
    '4': ['00CC', '√å'],
    '5': ['00CE', '√é'],
    '6': ['00EE', '√Æ'],
    '7': ['00CF', '√è'],
    '8': ['0399', 'Œô'],
    '9': ['03B9', 'Œπ'],
    '10': ['03B9 0323', 'ŒπÃ£'],
    '11': ['1F30', '·º∞'],
    '12': ['1F38', '·º∏'],
    #'13': ['1F34 03B9', '·º¥'],
    '14': ['1F34', '·º¥'],
    #'15': ['1F3C 0399', '·ºº'],
    '16': ['1F3C', '·ºº'],
    #'17': ['1F32 03B9', '17'],
    '18': ['1F32', '·º≤'],
    #'19': ['1F3A 0399', '19'],
    '20': ['1F3A', '·º∫'],
    #'21': ['1F3E 0399', '·ºæ'],
    '22': ['1F3E', '·ºæ'],
    #'23': ['1F36 03B9', '·º∂'],
    '24': ['1F36', '·º∂'],
    '25': ['1F31', '·º±'],
    '26': ['1F39', '·ºπ'],
    #'27': ['1F35 03B9', '27'],
    '28': ['1F35', '·ºµ'],
    #'29': ['1F3D 0399', '29'],
    '30': ['1F3D', '·ºΩ'],
    #'31': ['1F3B 03B9', '31'],
    '32': ['1F3B', '·ºª'],
    #'33': ['1F33 03B9', '33'],
    '34': ['1F33', '·º≥'],
    #'35': ['1F37 03B9', '35'],
    '36': ['1F37', '·º∑'],
    #'37': ['1F3F 0399', '·ºø'],
    '38': ['1F3F', '·ºø'],
    '39': ['038A', 'Œä'],
    '40': ['03AF', 'ŒØ'],
    '41': ['1FD6', '·øö'],
    '42': ['1F76', '·Ω∂'],
    '43': ['1FD2', '·øñ'],
    '44': ['03CA', 'œä'],
    '45': ['03AA', 'Œ™'],
    '48': ['1FD3', '48'],
    '49': ['1FD7', '·øó'],
    '50': ['0390', '50'],
    '51': ['1FDA', '51'],
    '52': ['03B9 035C', 'ŒπÕú']
    }
    kappa = {
    '1': ['039A', 'Œö'],
    '2': ['03BA', 'Œ∫']
    }
    llambda = {
    '1': ['039B', 'Œõ'],
    '2': ['03BB', 'Œª'],
    '3': ['03BB 0323', 'ŒªÃ£']
    }
    mu = {
    '1': ['00B5', '¬µ'],
    '2': ['03BC', 'Œº'],
    '3': ['03BC 0323', 'ŒºÃ£'],
    '4': ['039C', 'Œú']
    }
    nu = {
    '1': ['03BD', 'ŒΩ'],
    '2': ['039D', 'Œù'],
    '3': ['03BD 0323', 'ŒΩÃ£']
    }
    xi = {
    '1': ['039E', 'Œû'],
    '1': ['03BE', 'Œæ']
    }
    omicron = {
    '1': ['00D3', '√ì'],
    '2': ['00F3', '√≥'],
    '3': ['00D2', '√í'],
    '4': ['00F4', '√¥'],
    '5': ['00F6', '√∂'],
    '6': ['00D6', '√ñ'],
    '7': ['03BF', 'Œø'],
    '8': ['03BF 0323', 'ŒøÃ£'],
    '9': ['039F', 'Œü'],
    '10': ['1F40', '·ΩÄ'],
    '12': ['1F44', '·ΩÑ'],
    '14': ['1F42', '·ΩÇ'],
    '15': ['1F48', '·Ωä'],
    '16': ['1F41', '·ΩÅ'],
    '17': ['1F4D', '·Ωç'],
    '18': ['1F45', '·ΩÖ'],
    '19': ['1F4B', '·Ωã'],
    '20': ['1F43', '·ΩÉ'],
    '21': ['038C', 'Œå'],
    '22': ['03CC', 'œå'],
    '23': ['1F78', '·Ω∏'],
    '24': ['1FF8', '·ø∏'],
    '25': ['1F4C', '·ø∏'],
    '26': ['1F49', '·Ωâ'],
    '27': ['1F4A', '·Ωä'],
    '28': ['03BF 035C', 'ŒøÕú']
    }
    pi = {
    '1': ['03A0', 'Œ†'],
    '2': ['03C0', 'œÄ'],
    '3': ['03C0 0323', 'œÄÃ£']
    }
    rho = {
    '1': ['03A1', 'Œ°'],
    '2': ['03C1', 'œÅ'],
    '3': ['03C1 0323', 'œÅÃ£'],
    '4': ['1FE4', '·ø§'],
    '5': ['1FE5', '·ø•'],
    '6': ['1FEC', '·ø¨'],
    '7': ['03F1', 'œº']
    }
    sigma = {
    "1": ["03F9", "œπ"],
    "2": ["03A3", "Œ£"],
    "3": ["03C3", "œÉ"],
    "4": ["03FE", "œæ"],
    "5": ["03FD", "œΩ"],
    "6": ["03FF", "œø"],
    "7": ["03F2", "œ≤"],
    "8": ["1D6BA", "ùö∫"],
    "9": ["1D6D4", "ùõî"],
    "10": ["1D6F4", "ùõ¥"],
    "11": ["1D70E", "ùúé"],
    "12": ["1D72E", "ùúÆ"],
    "13": ["1D748", "ùùà"],
    "14": ["1D768", "ùù®"],
    "15": ["1D782", "ùûÇ"],
    "16": ["1D7A2", "ùû¢"],
    "17": ["1D7BC", "ùûº"]
    }

    end_sigma = {
    "1": ["03C2", "œÇ"],
    '2': ['03DB', 'œõ'],
    "3": ["1D6D3", "ùõì"],
    '4': ['1D70D', 'ùúç'],
    "5": ["1D747", "ùùá"],
    '6': ['1D781', 'ùûÅ'],
    "7": ["1D7BB", "ùûª"]
    }
    tau = {
    '1': ['03A4', 'Œ§'],
    '2': ['03C4', 'œÑ'],
    '3': ['03C4 0323', 'œÑÃ£']
    }
    upsilon = {
    '1': ['00FA', '√∫'],
    '2': ['00DA', '√ö'],
    '3': ['00DB', '√õ'],
    '4': ['00DC', '√ú'],
    '5': ['00FC', '√º'],
    '6': ['03A5', 'Œ•'],
    '7': ['03C5', 'œÖ'],
    '8': ['1F50', '·Ωê'],
    '9': ['1F54', '·Ωî'],
    '10': ['1F52', '·Ωí'],
    '11': ['1F56', '·Ωñ'],
    '12': ['1F51', '·Ωë'],
    '13': ['1F59', '·Ωô'],
    '14': ['1F55', '·Ωï'],
    '15': ['1F5D', '·Ωù'],
    '16': ['1F5B', '·Ωõ'],
    '17': ['1F53', '·Ωì'],
    '18': ['1F57', '5'],
    '19': ['1F5F', '·Ωü'],
    '20': ['1FEB', '·ø´'],
    '21': ['038E', 'Œé'],
    '22': ['03CD', 'œç'],
    '23': ['1F7A', '·ø™'],
    '24': ['1F50', '24'],
    '25': ['03C5 0323', '25'],
    '26': ['03AB', 'Œ´'],
    '27': ['03CB', 'œã'],
    '28': ['03B0', 'Œ∞'],
    '29': ['1FE7', '29'],
    '30': ['1FE6', '·ø¢'],
    '31': ['1FE7 0342', '31'],
    '32': ['1FEA', '·ø™'],
    '33': ['1FE3', '·ø£'],
    '34': ['03C5 035C', 'œÖÕú']
    }
    phi = {
    '1': ['03A6', 'Œ¶'],
    '2': ['03C6', 'œÜ']
    }
    chi = {
    '1': ['03A7', 'Œß'],
    '2': ['03C7', 'œá']
    }
    psi = {
    "1": ["03A8", "Œ®"],
    "2": ["03C8", "œà"]
    }
    omega = {
    "1": ["03A9", "Œ©"],
    "2": ["03C9", "œâ"],
    "3": ["1F60", "·Ω†"],
    "4": ["1F68", "·Ω®"],
    "5": ["1F64", "·Ω§"],
    "6": ["1F6C", "·Ω¨"],
    "7": ["1F64 0342", "·æ§"],
    "8": ["1F6C 0342", "8"],
    "9": ["1F6C", "·æ¨"],
    "10": ["1F62", "·Ω¢"],
    "11": ["1F6A", "·Ω™"],
    "12": ["1F62 0342", "·æ¢"],
    "13": ["1F62", "·æ¢"],
    "14": ["1F6E", "·ΩÆ"],
    "15": ["1F66", "·Ω¶"],
    "16": ["1F6E 0342", "16"],
    "17": ["1F6E", "·æÆ"],
    "18": ["1F66 0342", "18"],
    "19": ["1F66", "·æ¶"],
    "20": ["1F60 0342", "·æ†"],
    "21": ["1F60", "·æ†"],
    "22": ["1F69", "·Ω©"],
    "23": ["1F61", "·Ω°"],
    "24": ["1F65", "·Ω•"],
    "25": ["1F6D", "·Ω≠"],
    "26": ["1F65 0342", "26"],
    "27": ["1F65", "·æ•"],
    "28": ["1F6D 0342", "·æ≠"],
    "29": ["1F6D", "·æ≠"],
    "30": ["1F6B", "·Ω´"],
    "31": ["1F63", "·Ω£"],
    "32": ["1F6F", "·ΩØ"],
    "33": ["1F67", "·Ωß"],
    "34": ["1F67 0342", "·æß"],
    "35": ["1F67", "·æß"],
    "36": ["1F6F 0342", "·æØ"],
    "37": ["1F6F", "·æØ"],
    "38": ["1F61 0342", "38"],
    "39": ["1F61", "·æ°"],
    "40": ["038F", "Œè"],
    "41": ["03CE", "œé"],
    "42": ["1FF4", "·ø¥"],
    "43": ["1FFA", "·ø∫"],
    "44": ["1F7C", "·Ωº"],
    "45": ["1FF2", "·ø≤"],
    "46": ["1FF6", "·ø∂"],
    "47": ["1FF7", "·ø∑"],
    "49": ["03C9", "·ø≥"],
    "50": ["1FF3", "50"],
    "51": ["1FA0", "51"],
    "52": ["1FA4", "52"],
    '54': ['1FFC', '·øº'],
    '55': ['03C9 0323', 'œâÃ£'],
    '56': ['1FAF', '·æØ'],
    '57': ['1FA6', '·æ¶'],
    '58': ['1FAC', '·æ¨'],
    '59': ['1FA5', '·æ•'],
    '60': ['1FA1', '·æ°'],
    '61': ['1FAE', '·æÆ'],
    '62': ['1FA2', '·æ¢'],
    '63': ['1FAD', '·æ≠'],
    '64': ['03C9 035C', 'œâÕú']
    }

    with open('normalization.TSV', mode='w') as file:
        for key, value in alpha.items():
            file.write(f"{value[0]}\t03B1 # {value[1]} => Œ±\n")
        ls = letter_check('Œ±')
        for item in ls:
            file.write(f"{item[0]}\t03B1 # {item[1]} => Œ±\n")


        for key, value in beta.items():
            file.write(f"{value[0]}\t03B2 # {value[1]} => Œ≤\n")
        ls = letter_check('Œ≤')
        for item in ls:
            file.write(f"{item[0]}\t03B2 # {item[1]} => Œ≤\n")


        for key, value in gamma.items():
            file.write(f"{value[0]}\t03B3 # {value[1]} => Œ≥\n")
        ls = letter_check('Œ≥')
        for item in ls:
            file.write(f"{item[0]}\t03B3 # {item[1]} => Œ≥\n")


        for key, value in delta.items():
            file.write(f"{value[0]}\t03B4 # {value[1]} => Œ¥\n")
        ls = letter_check('Œ¥')
        for item in ls:
            file.write(f"{item[0]}\t03B4 # {item[1]} => Œ¥\n")


        for key, value in epsilon.items():
            file.write(f"{value[0]}\t03B5 # {value[1]} => Œµ\n")
        ls = letter_check('Œµ')
        for item in ls:
            file.write(f"{item[0]}\t03B5 # {item[1]} => Œµ\n")


        for key, value in zeta.items():
            file.write(f"{value[0]}\t03B6 # {value[1]} => Œ∂\n")
        ls = letter_check('Œ∂')
        for item in ls:
            file.write(f"{item[0]}\t03B6 # {item[1]} => Œ∂\n")


        for key, value in eta.items():
            file.write(f"{value[0]}\t03B7 # {value[1]} => Œ∑\n")
        ls = letter_check('Œ∑')
        for item in ls:
            file.write(f"{item[0]}\t03B7 # {item[1]} => Œ∑\n")


        for key, value in theta.items():
            file.write(f"{value[0]}\t03B8 # {value[1]} => Œ∏\n")
        ls = letter_check('Œ∏')
        for item in ls:
            file.write(f"{item[0]}\t03B8 # {item[1]} => Œ∏\n")


        for key, value in iota.items():
            file.write(f"{value[0]}\t03B9 # {value[1]} => Œπ\n")
        ls = letter_check('Œπ')
        for item in ls:
            file.write(f"{item[0]}\t03B9 # {item[1]} => Œπ\n")


        for key, value in kappa.items():
            file.write(f"{value[0]}\t03BA # {value[1]} => Œ∫\n")
        ls = letter_check('Œ∫')
        for item in ls:
            file.write(f"{item[0]}\t03BA # {item[1]} => Œ∫\n")


        for key, value in llambda.items():
            file.write(f"{value[0]}\t03BB # {value[1]} => Œª\n")
        ls = letter_check('Œª')
        for item in ls:
            file.write(f"{item[0]}\t03BB # {item[1]} => Œª\n")


        for key, value in mu.items():
            file.write(f"{value[0]}\t03BC # {value[1]} => Œº\n")
        ls = letter_check('Œº')
        for item in ls:
            file.write(f"{item[0]}\t03BC # {item[1]} => Œº\n")


        for key, value in nu.items():
            file.write(f"{value[0]}\t03BD # {value[1]} => ŒΩ\n")
        ls = letter_check('ŒΩ')
        for item in ls:
            file.write(f"{item[0]}\t03BD # {item[1]} => ŒΩ\n")


        for key, value in xi.items():
            file.write(f"{value[0]}\t03BE # {value[1]} => Œæ\n")
        ls = letter_check('Œæ')
        for item in ls:
            file.write(f"{item[0]}\t03BE # {item[1]} => Œæ\n")


        for key, value in omicron.items():
            file.write(f"{value[0]}\t03BF # {value[1]} => Œø\n")
        ls = letter_check('Œø')
        for item in ls:
            file.write(f"{item[0]}\t03BF # {item[1]} => Œø\n")


        for key, value in pi.items():
            file.write(f"{value[0]}\t03C0 # {value[1]} => œÄ\n")
        ls = letter_check('œÄ')
        for item in ls:
            file.write(f"{item[0]}\t03C0 # {item[1]} => œÄ\n")


        for key, value in rho.items():
            file.write(f"{value[0]}\t03C1 # {value[1]} => œÅ\n")
        ls = letter_check('œÅ')
        for item in ls:
            file.write(f"{item[0]}\t03C1 # {item[1]} => œÅ\n")


        for key, value in end_sigma.items():
            file.write(f"{value[0]}\t03C2 # {value[1]} => œÇ\n")


        for key, value in sigma.items():
            file.write(f"{value[0]}\t03C3 # {value[1]} => œÉ\n")


        for key, value in tau.items():
            file.write(f"{value[0]}\t03C4 # {value[1]} => œÑ\n")
        ls = letter_check('œÑ')
        for item in ls:
            file.write(f"{item[0]}\t03C4 # {item[1]} => œÑ\n")


        for key, value in upsilon.items():
            file.write(f"{value[0]}\t03C5 # {value[1]} => œÖ\n")
        ls = letter_check('œÖ')
        for item in ls:
            file.write(f"{item[0]}\t03C5 # {item[1]} => œÖ\n")


        for key, value in phi.items():
            file.write(f"{value[0]}\t03C6 # {value[1]} => œÜ\n")
        ls = letter_check('œÜ')
        for item in ls:
            file.write(f"{item[0]}\t03C6 # {item[1]} => œÜ\n")


        for key, value in chi.items():
            file.write(f"{value[0]}\t03C7 # {value[1]} => œá\n")
        ls = letter_check('œá')
        for item in ls:
            file.write(f"{item[0]}\t03C7 # {item[1]} => œá\n")


        for key, value in psi.items():
            file.write(f"{value[0]}\t03C8 # {value[1]} => œà\n")
        ls = letter_check('œà')
        for item in ls:
            file.write(f"{item[0]}\t03C8 # {item[1]} => œà\n")


        for key, value in omega.items():
            file.write(f"{value[0]}\t03C9 # {value[1]} => œâ\n")
        ls = letter_check('œâ')
        for item in ls:
            file.write(f"{item[0]}\t03C9 # {item[1]} => œâ\n")


if __name__ == '__main__':
    start_time = time.time()
    main()
    print("--- %s minutes ---" % ((time.time() - start_time) / 60))